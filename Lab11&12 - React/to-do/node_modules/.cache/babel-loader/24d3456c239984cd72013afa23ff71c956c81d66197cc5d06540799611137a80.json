{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\PAI\\\\Lab10\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewTask(_ref) {\n  _s();\n  let {\n    onAddTask\n  } = _ref;\n  const [content, setContent] = useState('');\n  const handleAddTask = () => {\n    if (content.trim() !== '') {\n      onAddTask(content);\n      setContent('');\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddTask();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: content,\n      onChange: event => setContent(event.target.value),\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(NewTask, \"7qMZGOaOfwYbu+hEA/2Jy8mHHnE=\");\n_c = NewTask;\nfunction App() {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  const [hideCompleted, setHideCompleted] = useState(false);\n  const [lastTaskId, setLastTaskId] = useState(0);\n  const handleToggle = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handleAddTask = content => {\n    const newTask = {\n      id: lastTaskId + 1,\n      content,\n      completed: false\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    setLastTaskId(prevId => prevId + 1);\n  };\n  const filteredTasks = hideCompleted ? tasks.filter(task => !task.completed) : tasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: hideCompleted,\n        onChange: () => setHideCompleted(!hideCompleted)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), \"Hide Completed Tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      tasks: filteredTasks,\n      onToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"JYCHshpdWGzIq5S69+lnv5EX7SU=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NewTask\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewTask","_ref","_s","onAddTask","content","setContent","handleAddTask","trim","handleKeyPress","event","key","children","type","value","onChange","target","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","App","_s2","tasks","setTasks","hideCompleted","setHideCompleted","lastTaskId","setLastTaskId","handleToggle","taskId","prevTasks","map","task","id","completed","newTask","prevId","filteredTasks","filter","checked","ToDoList","onToggle","_c2","$RefreshReg$"],"sources":["D:/Studia/PAI/Lab10/to-do/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction NewTask({ onAddTask }) {\n  const [content, setContent] = useState('');\n\n  const handleAddTask = () => {\n    if (content.trim() !== '') {\n      onAddTask(content);\n      setContent('');\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleAddTask();\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={content}\n        onChange={(event) => setContent(event.target.value)}\n        onKeyPress={handleKeyPress}\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n    </div>\n  );\n}\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [hideCompleted, setHideCompleted] = useState(false);\n  const [lastTaskId, setLastTaskId] = useState(0);\n\n  const handleToggle = (taskId) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  const handleAddTask = (content) => {\n    const newTask = {\n      id: lastTaskId + 1,\n      content,\n      completed: false,\n    };\n\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n    setLastTaskId((prevId) => prevId + 1);\n  };\n\n  const filteredTasks = hideCompleted\n    ? tasks.filter((task) => !task.completed)\n    : tasks;\n\n  return (\n    <div>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={hideCompleted}\n          onChange={() => setHideCompleted(!hideCompleted)}\n        />\n        Hide Completed Tasks\n      </label>\n      <ToDoList tasks={filteredTasks} onToggle={handleToggle} />\n      <NewTask onAddTask={handleAddTask} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}