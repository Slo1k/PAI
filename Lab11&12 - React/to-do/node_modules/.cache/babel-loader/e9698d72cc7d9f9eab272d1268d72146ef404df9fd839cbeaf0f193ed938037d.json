{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\PAI\\\\Lab10\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ToDoList from './components/ToDoList';\nimport NewTask from './components/NewTask';\nimport Filter from './components/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [hideCompleted, setHideCompleted] = useState(false);\n  const [lastTaskId, setLastTaskId] = useState(0);\n  const handleToggle = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handleAddTask = content => {\n    const newTask = {\n      id: lastTaskId + 1,\n      content,\n      completed: false\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    setLastTaskId(prevId => prevId + 1);\n  };\n  const handleToggleHideCompleted = () => {\n    setHideCompleted(prevHideCompleted => !prevHideCompleted);\n  };\n  const filteredTasks = hideCompleted ? tasks.filter(task => !task.completed) : tasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      hideCompleted: hideCompleted,\n      onToggleHideCompleted: handleToggleHideCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      tasks: filteredTasks,\n      onToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JYCHshpdWGzIq5S69+lnv5EX7SU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToDoList","NewTask","Filter","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","hideCompleted","setHideCompleted","lastTaskId","setLastTaskId","handleToggle","taskId","prevTasks","map","task","id","completed","handleAddTask","content","newTask","prevId","handleToggleHideCompleted","prevHideCompleted","filteredTasks","filter","children","onToggleHideCompleted","fileName","_jsxFileName","lineNumber","columnNumber","onToggle","onAddTask","_c","$RefreshReg$"],"sources":["D:/Studia/PAI/Lab10/to-do/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ToDoList from './components/ToDoList';\nimport NewTask from './components/NewTask';\nimport Filter from './components/Filter';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [hideCompleted, setHideCompleted] = useState(false);\n  const [lastTaskId, setLastTaskId] = useState(0);\n\n  const handleToggle = (taskId) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  const handleAddTask = (content) => {\n    const newTask = {\n      id: lastTaskId + 1,\n      content,\n      completed: false,\n    };\n\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n    setLastTaskId((prevId) => prevId + 1);\n  };\n\n  const handleToggleHideCompleted = () => {\n    setHideCompleted((prevHideCompleted) => !prevHideCompleted);\n  };\n\n  const filteredTasks = hideCompleted\n    ? tasks.filter((task) => !task.completed)\n    : tasks;\n\n  return (\n    <div>\n      <Filter\n        hideCompleted={hideCompleted}\n        onToggleHideCompleted={handleToggleHideCompleted}\n      />\n      <ToDoList tasks={filteredTasks} onToggle={handleToggle} />\n      <NewTask onAddTask={handleAddTask} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMc,YAAY,GAAIC,MAAM,IAAK;IAC/BN,QAAQ,CAAEO,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACC,EAAE,KAAKJ,MAAM,GAAG;MAAE,GAAGG,IAAI;MAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;IAAU,CAAC,GAAGF,IACjE,CACF,CAAC;EACH,CAAC;EAED,MAAMG,aAAa,GAAIC,OAAO,IAAK;IACjC,MAAMC,OAAO,GAAG;MACdJ,EAAE,EAAEP,UAAU,GAAG,CAAC;MAClBU,OAAO;MACPF,SAAS,EAAE;IACb,CAAC;IAEDX,QAAQ,CAAEO,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEO,OAAO,CAAC,CAAC;IAChDV,aAAa,CAAEW,MAAM,IAAKA,MAAM,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;IACtCd,gBAAgB,CAAEe,iBAAiB,IAAK,CAACA,iBAAiB,CAAC;EAC7D,CAAC;EAED,MAAMC,aAAa,GAAGjB,aAAa,GAC/BF,KAAK,CAACoB,MAAM,CAAEV,IAAI,IAAK,CAACA,IAAI,CAACE,SAAS,CAAC,GACvCZ,KAAK;EAET,oBACEH,OAAA;IAAAwB,QAAA,gBACExB,OAAA,CAACF,MAAM;MACLO,aAAa,EAAEA,aAAc;MAC7BoB,qBAAqB,EAAEL;IAA0B;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF7B,OAAA,CAACJ,QAAQ;MAACO,KAAK,EAAEmB,aAAc;MAACQ,QAAQ,EAAErB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1D7B,OAAA,CAACH,OAAO;MAACkC,SAAS,EAAEf;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAAC3B,EAAA,CA1CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}