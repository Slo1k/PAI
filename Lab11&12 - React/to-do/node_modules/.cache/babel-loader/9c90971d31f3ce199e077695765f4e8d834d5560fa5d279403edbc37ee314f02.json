{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\PAI\\\\Lab10\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from '../components/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList(_ref) {\n  let {\n    tasks,\n    onToggle\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      id: task.id,\n      content: task.content,\n      completed: task.completed,\n      onToggle: onToggle\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDoList;\nfunction NewTask(_ref2) {\n  _s();\n  let {\n    onAddTask\n  } = _ref2;\n  const [content, setContent] = useState('');\n  const handleAddTask = () => {\n    if (content.trim() !== '') {\n      onAddTask(content);\n      setContent('');\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddTask();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: content,\n      onChange: event => setContent(event.target.value),\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(NewTask, \"7qMZGOaOfwYbu+hEA/2Jy8mHHnE=\");\n_c2 = NewTask;\nfunction App() {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  const [hideCompleted, setHideCompleted] = useState(false);\n  const [lastTaskId, setLastTaskId] = useState(0);\n  const handleToggle = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handleAddTask = content => {\n    const newTask = {\n      id: lastTaskId + 1,\n      content,\n      completed: false\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    setLastTaskId(prevId => prevId + 1);\n  };\n  const filteredTasks = hideCompleted ? tasks.filter(task => !task.completed) : tasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: hideCompleted,\n        onChange: () => setHideCompleted(!hideCompleted)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \"Hide Completed Tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      tasks: filteredTasks,\n      onToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"JYCHshpdWGzIq5S69+lnv5EX7SU=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ToDoList\");\n$RefreshReg$(_c2, \"NewTask\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Task","jsxDEV","_jsxDEV","ToDoList","_ref","tasks","onToggle","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","task","id","content","completed","_c","NewTask","_ref2","_s","onAddTask","setContent","handleAddTask","trim","handleKeyPress","event","key","type","value","onChange","target","onKeyPress","onClick","_c2","App","_s2","setTasks","hideCompleted","setHideCompleted","lastTaskId","setLastTaskId","handleToggle","taskId","prevTasks","newTask","prevId","filteredTasks","filter","checked","_c3","$RefreshReg$"],"sources":["D:/Studia/PAI/Lab10/to-do/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Task from '../components/Task';\n\n\nfunction ToDoList({ tasks, onToggle }) {\n  return (\n    <div>\n      {tasks.length === 0 ? (\n        <p>No tasks to display.</p>\n      ) : (\n        tasks.map((task) => (\n          <Task\n            key={task.id}\n            id={task.id}\n            content={task.content}\n            completed={task.completed}\n            onToggle={onToggle}\n          />\n        ))\n      )}\n    </div>\n  );\n}\n\nfunction NewTask({ onAddTask }) {\n  const [content, setContent] = useState('');\n\n  const handleAddTask = () => {\n    if (content.trim() !== '') {\n      onAddTask(content);\n      setContent('');\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleAddTask();\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={content}\n        onChange={(event) => setContent(event.target.value)}\n        onKeyPress={handleKeyPress}\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n    </div>\n  );\n}\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [hideCompleted, setHideCompleted] = useState(false);\n  const [lastTaskId, setLastTaskId] = useState(0);\n\n  const handleToggle = (taskId) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  const handleAddTask = (content) => {\n    const newTask = {\n      id: lastTaskId + 1,\n      content,\n      completed: false,\n    };\n\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n    setLastTaskId((prevId) => prevId + 1);\n  };\n\n  const filteredTasks = hideCompleted\n    ? tasks.filter((task) => !task.completed)\n    : tasks;\n\n  return (\n    <div>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={hideCompleted}\n          onChange={() => setHideCompleted(!hideCompleted)}\n        />\n        Hide Completed Tasks\n      </label>\n      <ToDoList tasks={filteredTasks} onToggle={handleToggle} />\n      <NewTask onAddTask={handleAddTask} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}