{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\PAI\\\\Lab10\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task(_ref) {\n  let {\n    id,\n    content,\n    completed,\n    onToggle\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: completed,\n      onChange: () => onToggle(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textDecoration: completed ? 'line-through' : 'none'\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Task;\nfunction ToDoList(_ref2) {\n  let {\n    tasks,\n    onToggle\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      id: task.id,\n      content: task.content,\n      completed: task.completed,\n      onToggle: onToggle\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ToDoList;\nfunction NewTask(_ref3) {\n  _s();\n  let {\n    onAddTask\n  } = _ref3;\n  const [content, setContent] = useState('');\n  const handleAddTask = () => {\n    if (content.trim() !== '') {\n      onAddTask(content);\n      setContent('');\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleAddTask();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: content,\n      onChange: event => setContent(event.target.value),\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(NewTask, \"7qMZGOaOfwYbu+hEA/2Jy8mHHnE=\");\n_c3 = NewTask;\nfunction App() {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  const [hideCompleted, setHideCompleted] = useState(false);\n  const [lastTaskId, setLastTaskId] = useState(0);\n  const handleToggle = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handleAddTask = content => {\n    const newTask = {\n      id: lastTaskId + 1,\n      content,\n      completed: false\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    setLastTaskId(prevId => prevId + 1);\n  };\n  const filteredTasks = hideCompleted ? tasks.filter(task => !task.completed) : tasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: hideCompleted,\n        onChange: () => setHideCompleted(!hideCompleted)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), \"Hide Completed Tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      tasks: filteredTasks,\n      onToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"JYCHshpdWGzIq5S69+lnv5EX7SU=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"ToDoList\");\n$RefreshReg$(_c3, \"NewTask\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Task","_ref","id","content","completed","onToggle","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","_c","ToDoList","_ref2","tasks","length","map","task","_c2","NewTask","_ref3","_s","onAddTask","setContent","handleAddTask","trim","handleKeyPress","event","key","value","target","onKeyPress","onClick","_c3","App","_s2","setTasks","hideCompleted","setHideCompleted","lastTaskId","setLastTaskId","handleToggle","taskId","prevTasks","newTask","prevId","filteredTasks","filter","_c4","$RefreshReg$"],"sources":["D:/Studia/PAI/Lab10/to-do/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Task({ id, content, completed, onToggle }) {\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        checked={completed}\n        onChange={() => onToggle(id)}\n      />\n      <span style={{ textDecoration: completed ? 'line-through' : 'none' }}>\n        {content}\n      </span>\n    </div>\n  );\n}\n\nfunction ToDoList({ tasks, onToggle }) {\n  return (\n    <div>\n      {tasks.length === 0 ? (\n        <p>No tasks to display.</p>\n      ) : (\n        tasks.map((task) => (\n          <Task\n            key={task.id}\n            id={task.id}\n            content={task.content}\n            completed={task.completed}\n            onToggle={onToggle}\n          />\n        ))\n      )}\n    </div>\n  );\n}\n\nfunction NewTask({ onAddTask }) {\n  const [content, setContent] = useState('');\n\n  const handleAddTask = () => {\n    if (content.trim() !== '') {\n      onAddTask(content);\n      setContent('');\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleAddTask();\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={content}\n        onChange={(event) => setContent(event.target.value)}\n        onKeyPress={handleKeyPress}\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n    </div>\n  );\n}\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [hideCompleted, setHideCompleted] = useState(false);\n  const [lastTaskId, setLastTaskId] = useState(0);\n\n  const handleToggle = (taskId) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  const handleAddTask = (content) => {\n    const newTask = {\n      id: lastTaskId + 1,\n      content,\n      completed: false,\n    };\n\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n    setLastTaskId((prevId) => prevId + 1);\n  };\n\n  const filteredTasks = hideCompleted\n    ? tasks.filter((task) => !task.completed)\n    : tasks;\n\n  return (\n    <div>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={hideCompleted}\n          onChange={() => setHideCompleted(!hideCompleted)}\n        />\n        Hide Completed Tasks\n      </label>\n      <ToDoList tasks={filteredTasks} onToggle={handleToggle} />\n      <NewTask onAddTask={handleAddTask} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}